{"version":3,"sources":["logo.svg","components/cowinContainer/index.js","components/CityList/index.js","components/Toggler/index.js","components/filter/index.js","components/Card/cardListing.js","components/Card/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","districtArray","selectedAge","useState","cardInfo","setCards","totalAvailableCount","setTotalCount","initialbaseUrl","JSON","parse","localStorage","getItem","setItem","baseUrlIndex","setBaseUrl","useEffect","allData","count","map","c","axios","get","district_id","moment","format","then","res","data","centers","item","totalAvailableSlot","sessions","s","min_age_limit","parseInt","available_capacity","pincode","catch","className","Object","keys","style","display","marginTop","Button","onClick","navigator","clipboard","writeText","variant","color","CityList","selectedCity","refreshNumber","setIntevalForRefresh","forToggle","setToggle","setDistrictArray","value","districts","label","background","marginLeft","console","log","useStyles","makeStyles","root","backgroundColor","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","checkedIcon","content","StyledRadio","props","classes","Radio","disableRipple","clsx","CustomizedRadios","handleRadioChange","isDisabled","Card","CardContent","Typography","component","FormControl","RadioGroup","onChange","defaultValue","aria-label","name","FormControlLabel","disabled","control","Filter","setCities","setAge","selectedCities","initailStates","setStates","isLoadingAPI","setLoader","states","selectStates","push","state_name","state_id","isLoading","options","placeholderButtonLabel","e","length","target","theme","maxWidth","palette","paper","InsetList","listItems","List","text","ListItem","button","ListItemIcon","ListItemText","primary","dangerouslySetInnerHTML","__html","minWidth","bullet","margin","transform","title","fontSize","pos","marginBottom","SimpleCard","App","initialRefresh","setRefresh","number","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c617dd8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\n// import card from \"../card\"\nimport \"./style.css\"\nimport Button from '@material-ui/core/Button';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport moment from \"moment\"\n\nexport default function Container({ districtArray, selectedAge }) {\n    const [intialState, setInitialState] = useState(0)\n    let [cardInfo, setCards] = useState({})\n    let [totalAvailableCount, setTotalCount] = useState(0)\n    let initialbaseUrl = JSON.parse(localStorage.getItem(\"baseUrlIndex\")) || localStorage.setItem(\"baseUrlIndex\", false)\n    let [baseUrlIndex, setBaseUrl] = useState(initialbaseUrl || false)\n    useEffect((() => {\n        let allData = {}\n        let count = 0\n        districtArray.map((c) => {\n            axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/${baseUrlIndex ? 'public/' : ''}calendarByDistrict?district_id=${c.district_id}&date=${moment().format(\"DD-MM-YYYY\")}`)\n                .then((res) => {\n                    let { data: { centers } } = res\n                    centers.map(item => {\n                        let totalAvailableSlot = 0\n                        item.sessions.map((s) => {\n                            totalAvailableSlot += s.min_age_limit === parseInt(selectedAge) ? s.available_capacity : 0\n                        })\n                        if (totalAvailableSlot) {\n                            allData = {\n                                ...allData,\n                                [item.pincode]: allData[item.pincode] ? allData[item.pincode] + totalAvailableSlot : totalAvailableSlot\n                            }\n                        }\n                        count += totalAvailableSlot\n                    })\n                    setTotalCount(count)\n                    // allData.push(res.data.centers)\n                    // allData.sor((a, b) => allData[a] > allData[b])\n                    // console.log(\"allData\", allData)\n                    setCards(allData)\n                    // setCards(res.data)\n                }).catch(() => {\n                    setCards({})\n                    setTotalCount(0)\n                    localStorage.setItem(\"baseUrlIndex\", !baseUrlIndex)\n                    setBaseUrl(!baseUrlIndex)\n                })\n        })\n    }), [districtArray])\n    return (\n        <div className=\"slots_info\">\n            {totalAvailableCount > 0 ? Object.keys(cardInfo).map((keys) => {\n                return <div key={keys} className=\"slots_inline\" style={{\n                    display: \"inlineBlock\",\n                    marginTop: \"20px\"\n                }}>\n                    <Button onClick={() => { navigator.clipboard.writeText(keys) }} variant=\"contained\" color=\"primary\">{keys}{\" \"} <FileCopyIcon /> </Button><Button variant=\"contained\" color=\"secondary\">{cardInfo[keys]}</Button>{\" \"}</div>\n            }) : <Button style={{ marginTop: \"20px\" }} variant=\"contained\" color=\"secondary\">NO SLOT AVAILABLE, Try Refresh!</Button>}</div>\n    )\n}","import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\"\nimport ListContainer from \"./../cowinContainer\"\nimport \"./style.css\"\nimport Button from '@material-ui/core/Button';\n\nexport default function CityList({ selectedCity, refreshNumber, setIntevalForRefresh, selectedAge }) {\n    let [forToggle, setToggle] = useState(false)\n    let [districtArray, setDistrictArray] = useState([])\n    useEffect(() => {\n        !refreshNumber && axios.get(`https://cdn-api.co-vin.in/api/v2/admin/location/districts/${selectedCity.value}`)\n            .then(res => {\n                const { data: { districts } } = res\n                setDistrictArray(districts)\n                setIntevalForRefresh(10)\n            }).catch(() => {\n                setIntevalForRefresh(10)\n            })\n    }, [selectedCity.value, forToggle])\n    let handleRefresh = () => {\n        console.log(\"setToggle\", setToggle)\n        setIntevalForRefresh(10)\n        setToggle(!forToggle)\n    }\n    return <div className=\"city_wrapper\">\n        <Button variant=\"contained\">{selectedCity.label}{\"  \"}</Button>\n        {!refreshNumber ? <Button variant=\"contained\" style={{ background: \"orange\", marginLeft: \"10px\" }} onClick={() => handleRefresh()}>\n            Refresh\n        </Button> : null}\n        <div className=\"city_list_content\">\n            <ListContainer\n                selectedAge={selectedAge}\n                districtArray={districtArray || []}\n            />\n        </div>\n    </div>\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        '&:hover': {\n            backgroundColor: 'transparent',\n        },\n    },\n    icon: {\n        borderRadius: '50%',\n        width: 16,\n        height: 16,\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n        backgroundColor: '#f5f8fa',\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n        '$root.Mui-focusVisible &': {\n            outline: '2px auto rgba(19,124,189,.6)',\n            outlineOffset: 2,\n        },\n        'input:hover ~ &': {\n            backgroundColor: '#ebf1f5',\n        },\n        'input:disabled ~ &': {\n            boxShadow: 'none',\n            background: 'rgba(206,217,224,.5)',\n        },\n    },\n    checkedIcon: {\n        backgroundColor: '#137cbd',\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n        '&:before': {\n            display: 'block',\n            width: 16,\n            height: 16,\n            backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n            content: '\"\"',\n        },\n        'input:hover ~ &': {\n            backgroundColor: '#106ba3',\n        },\n    },\n});\n\n// Inspired by blueprintjs\nfunction StyledRadio(props) {\n    const classes = useStyles();\n\n    return (\n        <Radio\n            className={classes.root}\n            disableRipple\n            color=\"primary\"\n            checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n            icon={<span className={classes.icon} />}\n            {...props}\n        />\n    );\n}\n\nexport default function CustomizedRadios({ handleRadioChange, isDisabled, selectedAge }) {\n    return (\n        <Card>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    <FormControl component=\"fieldset\">\n                        <RadioGroup onChange={handleRadioChange} defaultValue={selectedAge} aria-label=\"gender\" name=\"customized-radios\">\n                            <FormControlLabel disabled={isDisabled > 0} value=\"18\" control={<StyledRadio />} label=\"18+\" />\n                            <FormControlLabel disabled={isDisabled > 0} value=\"45\" control={<StyledRadio />} label=\"45+\" />\n                        </RadioGroup>\n                    </FormControl>\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n","import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\"\nimport MutliSelect from \"react-multiselect-checkboxes\"\nimport ToggleButtons from \"../Toggler\"\nimport \"./style.css\"\n\nexport default function Filter({ setCities, setIntevalForRefresh, refreshNumber, setAge, selectedCities, selectedAge }) {\n    const [initailStates, setStates] = useState([])\n    const [isLoadingAPI, setLoader] = useState(true)\n    useEffect(() => {\n        isLoadingAPI && axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/states')\n            .then((res) => {\n                const { data: { states } } = res\n                let selectStates = []\n                states.map((item) => {\n                    selectStates.push({\n                        label: item.state_name,\n                        value: item.state_id\n                    })\n                })\n                setStates(selectStates)\n                setLoader(false)\n\n            })\n    }, [isLoadingAPI])\n    return <div className=\"filter_wrapper\">\n        <div className=\"filter_state_select\">\n            <MutliSelect\n                isLoading={isLoadingAPI}\n                options={initailStates}\n                value={selectedCities}\n                isDisabled={refreshNumber}\n                placeholderButtonLabel=\"Select Your States\"\n                onChange={(e) => {\n                    selectedCities.length < e.length && setIntevalForRefresh(10)\n                    setCities(e)\n                }}\n            />\n        </div>\n        <ToggleButtons\n            handleRadioChange={(e) => {\n                setAge(e.target.value)\n                setCities([])\n            }}\n            selectedAge={selectedAge}\n            isDisabled={refreshNumber}\n        />\n    </div>\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport StarIcon from '@material-ui/icons/Star';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        maxWidth: '90%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function InsetList({ listItems }) {\n    const classes = useStyles();\n    return (\n        <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\n            {listItems.map((text) => {\n                return <ListItem button>\n                    <ListItemIcon>\n                        <StarIcon />\n                    </ListItemIcon>\n                    <ListItemText primary={<span dangerouslySetInnerHTML={{ __html: text }}></span>} />\n                </ListItem>\n            })}\n        </List>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardListing from \"./cardListing\"\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: \"1000\",\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nexport default function SimpleCard() {\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n    let listItems = [\n        \"Search for available slots by pincode in your states.\",\n        \"See the available slots in the search results.\",\n        \"If slots are available, visit <a href='https://selfregistration.cowin.gov.in/' target='_blank'>https://selfregistration.cowin.gov.in/</a> to book an appointment by copy paste pincode <small>(for fast process)</small>.\",\n        // \"If there are no slots available, click on bell icon to get notified when slots are available in your area.\"\n    ]\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    How to Book an Appointment (For covid vaccination)\n                </Typography>\n                <CardListing\n                    listItems={listItems}\n                />\n            </CardContent>\n        </Card>\n    );\n}\n","import logo from './logo.svg';\nimport React, { useEffect, useState } from \"react\"\nimport Button from '@material-ui/core/Button';\nimport './App.css';\nimport CityList from \"./components/CityList\"\nimport FilterList from \"./components/filter\"\nimport SimpleCard from './components/Card';\n\nfunction App() {\n  const [selectedCities, setCities] = useState([])\n  let [selectedAge, setAge] = useState(\"18\")\n  let initialRefresh = !(localStorage.getItem(\"have\")) ? JSON.parse(localStorage.getItem(\"refreshNumber\")) || localStorage.setItem(\"refreshNumber\", 0) : 0\n  const [refreshNumber, setRefresh] = useState(initialRefresh || 0)\n  let setIntevalForRefresh = (number) => {\n    (number) && setTimeout(() => {\n      localStorage.setItem(\"refreshNumber\", number - 1)\n      // setIntevalForRefresh(number - 1)\n      setRefresh(number - 1)\n    }, 1000)\n  }\n  refreshNumber && setIntevalForRefresh(refreshNumber)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SimpleCard />\n        {refreshNumber ? <div className=\"header_button\">\n          <Button className=\"header_button\" variant=\"contained\" color=\"secondary\">\n            {`Wait till ${refreshNumber} secs for next refresh`}\n          </Button></div> : null}\n        <FilterList\n          setCities={setCities}\n          setIntevalForRefresh={setIntevalForRefresh}\n          refreshNumber={refreshNumber}\n          setAge={setAge}\n          selectedCities={selectedCities}\n          selectedAge={selectedAge}\n        />\n        {selectedCities.map((item) => {\n          return <CityList\n            key={item.value}\n            refreshNumber={refreshNumber}\n            selectedCity={item}\n            selectedAge={selectedAge}\n            setIntevalForRefresh={setIntevalForRefresh}\n          />\n        })}\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}