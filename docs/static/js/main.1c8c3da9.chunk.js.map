{"version":3,"sources":["logo.svg","components/cowinContainer/index.js","components/CityList/index.js","components/filter/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","useState","cardInfo","setCards","totalAvailableCount","setTotalCount","initialbaseUrl","JSON","parse","localStorage","getItem","setItem","baseUrlIndex","setBaseUrl","useEffect","allData","count","districtArray","map","c","axios","get","district_id","moment","format","then","res","data","centers","item","totalAvailableSlot","sessions","s","min_age_limit","available_capacity","pincode","catch","className","Object","keys","style","display","marginTop","Button","onClick","navigator","clipboard","writeText","variant","color","CityList","selectedCity","refreshNumber","setIntevalForRefresh","forToggle","setToggle","setDistrictArray","value","districts","console","log","label","background","marginLeft","Filter","setCities","initailStates","setStates","isLoadingAPI","setLoader","states","selectStates","push","state_name","state_id","isLoading","options","isDisabled","placeholderButtonLabel","onChange","e","App","selectedCities","initialRefresh","setRefresh","number","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c8c3da9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\"\nimport axios from \"axios\"\n// import card from \"../card\"\nimport \"./style.css\"\nimport Button from '@material-ui/core/Button';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport moment from \"moment\"\n\nexport default function Container(props) {\n    const [intialState, setInitialState] = useState(0)\n    let [cardInfo, setCards] = useState({})\n    let [totalAvailableCount, setTotalCount] = useState(0)\n    let initialbaseUrl = JSON.parse(localStorage.getItem(\"baseUrlIndex\")) || localStorage.setItem(\"baseUrlIndex\", false)\n    let [baseUrlIndex, setBaseUrl] = useState(initialbaseUrl || false)\n    useEffect((() => {\n        let allData = {}\n        let count = 0\n        props.districtArray.map((c) => {\n            axios.get(`https://cdn-api.co-vin.in/api/v2/appointment/sessions/${baseUrlIndex ? 'public/' : ''}calendarByDistrict?district_id=${c.district_id}&date=${moment().format(\"DD-MM-YYYY\")}`)\n                .then((res) => {\n                    let { data: { centers } } = res\n                    centers.map(item => {\n                        let totalAvailableSlot = 0\n                        item.sessions.map((s) => {\n                            totalAvailableSlot += s.min_age_limit < 45 ? s.available_capacity : 0\n                        })\n                        if (totalAvailableSlot) {\n                            allData = {\n                                ...allData,\n                                [item.pincode]: allData[item.pincode] ? allData[item.pincode] + totalAvailableSlot : totalAvailableSlot\n                            }\n                        }\n                        count += totalAvailableSlot\n                    })\n                    setTotalCount(count)\n                    // allData.push(res.data.centers)\n                    setCards(allData)\n                    // setCards(res.data)\n                }).catch(() => {\n                    setCards({})\n                    setTotalCount(0)\n                    localStorage.setItem(\"baseUrlIndex\", !baseUrlIndex)\n                    setBaseUrl(!baseUrlIndex)\n                })\n        })\n    }), [props.districtArray])\n    return (\n        <div className=\"slots_info\">\n            {totalAvailableCount > 0 ? Object.keys(cardInfo).map((keys) => {\n                return <div className=\"slots_inline\" style={{\n                    display: \"inlineBlock\",\n                    marginTop: \"20px\"\n                }}>\n                    <Button onClick={() => { navigator.clipboard.writeText(keys) }} variant=\"contained\" color=\"primary\">{keys}{\" \"} <FileCopyIcon /> </Button><Button variant=\"contained\" color=\"secondary\">{cardInfo[keys]}</Button>{\" \"}</div>\n            }) : <Button style={{ marginTop: \"20px\" }} variant=\"contained\" color=\"secondary\">NO SLOT AVAILABLE, Try Refresh!</Button>}</div>\n    )\n}","import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\"\nimport ListContainer from \"./../cowinContainer\"\nimport \"./style.css\"\nimport Button from '@material-ui/core/Button';\n\nexport default function CityList({ selectedCity, refreshNumber, setIntevalForRefresh }) {\n    let [forToggle, setToggle] = useState(false)\n    let [districtArray, setDistrictArray] = useState([])\n    useEffect(() => {\n        !refreshNumber && axios.get(`https://cdn-api.co-vin.in/api/v2/admin/location/districts/${selectedCity.value}`)\n            .then(res => {\n                const { data: { districts } } = res\n                setDistrictArray(districts)\n                setIntevalForRefresh(60)\n            }).catch(() => {\n                setIntevalForRefresh(60)\n            })\n    }, [selectedCity.value, forToggle])\n    let handleRefresh = () => {\n        console.log(\"setToggle\", setToggle)\n        setIntevalForRefresh(60)\n        setToggle(!forToggle)\n    }\n    console.log(\"selectedCity\", refreshNumber);\n    return <div className=\"city_wrapper\">\n        <Button variant=\"contained\">{selectedCity.label}{\"  \"}</Button>\n        {!refreshNumber ? <Button variant=\"contained\" style={{ background: \"orange\", marginLeft: \"10px\" }} onClick={() => handleRefresh()}>\n            Refresh\n        </Button> : null}\n        <div className=\"city_list_content\">\n            <ListContainer\n                districtArray={districtArray || []}\n            />\n        </div>\n    </div>\n}","import axios from \"axios\"\nimport React, { useEffect, useState } from \"react\"\nimport MutliSelect from \"react-multiselect-checkboxes\"\nimport \"./style.css\"\n\nexport default function Filter({ setCities, setIntevalForRefresh, refreshNumber }) {\n    const [intialState, setInitialState] = useState(0)\n    const [initailStates, setStates] = useState([])\n    const [isLoadingAPI, setLoader] = useState(true)\n    useEffect(() => {\n        isLoadingAPI && axios.get('https://cdn-api.co-vin.in/api/v2/admin/location/states')\n            .then((res) => {\n                const { data: { states } } = res\n                let selectStates = []\n                states.map((item) => {\n                    selectStates.push({\n                        label: item.state_name,\n                        value: item.state_id\n                    })\n                })\n                setStates(selectStates)\n                setLoader(false)\n\n            })\n    }, [isLoadingAPI])\n    return <div className=\"filter_wrapper\">\n        <div className=\"filter_state_select\">\n            <MutliSelect\n                isLoading={isLoadingAPI}\n                options={initailStates}\n                isDisabled={refreshNumber}\n                placeholderButtonLabel=\"Select Your City\"\n                onChange={(e) => {\n                    setCities(e)\n                    setIntevalForRefresh(60)\n                }}\n            />\n        </div>\n    </div>\n\n}","import logo from './logo.svg';\nimport React, { useEffect, useState } from \"react\"\nimport Button from '@material-ui/core/Button';\nimport './App.css';\nimport CityList from \"./components/CityList\"\nimport FilterList from \"./components/filter\"\n\nfunction App() {\n  const [selectedCities, setCities] = useState([])\n  let initialRefresh = !(localStorage.getItem(\"have\")) ? JSON.parse(localStorage.getItem(\"refreshNumber\")) || localStorage.setItem(\"refreshNumber\", 0) : 0\n  const [refreshNumber, setRefresh] = useState(initialRefresh || 0)\n  let setIntevalForRefresh = (number) => {\n    (number) && setTimeout(() => {\n      localStorage.setItem(\"refreshNumber\", number - 1)\n      // setIntevalForRefresh(number - 1)\n      setRefresh(number - 1)\n    }, 1000)\n  }\n  refreshNumber && setIntevalForRefresh(refreshNumber)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {refreshNumber ? <div className=\"header_button\">\n          <Button className=\"header_button\" variant=\"contained\" color=\"secondary\">\n            {`Wait till ${refreshNumber} secs for next refresh`}\n          </Button></div> : null}\n        <FilterList\n          setCities={setCities}\n          setIntevalForRefresh={setIntevalForRefresh}\n          refreshNumber={refreshNumber}\n        />\n        {selectedCities.map((item) => {\n          return <CityList\n            key={item.value}\n            refreshNumber={refreshNumber}\n            selectedCity={item}\n            setIntevalForRefresh={setIntevalForRefresh}\n          />\n        })}\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}